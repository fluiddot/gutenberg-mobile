version: 2.1

orbs:
  slack: circleci/slack@3.4.2

commands:
  npm-install:
    steps:
      - restore_cache:
          name: Restore NPM Cache
          keys:
            - npm-i18n-v4-cache-v{{ .Environment.CACHE_TRIGGER_VERSION }}-job-{{ .Environment.CIRCLE_JOB }}-{{ checksum "package-lock.json" }}
      - run:
          name: NPM Install
          command: npm ci --prefer-offline
      - save_cache:
          name: Save NPM Cache
          key: npm-i18n-v4-cache-v{{ .Environment.CACHE_TRIGGER_VERSION }}-job-{{ .Environment.CIRCLE_JOB }}-{{ checksum "package-lock.json" }}
          paths:
            - ~/.npm
            - i18n-cache/data
  checkout-submodules:
    steps:
      - run:
          name: Checkout Submodules
          command: git submodule update --init --recursive
  add-jest-reporter-dir:
      steps:
        - run:
            name: Create reports directory
            command: mkdir reports && mkdir reports/test-results

jobs:
  checks:
    parameters:
      platform:
        type: string
        default: ""
      check-tests:
        type: boolean
        default: false
      check-correctness:
        type: boolean
        default: false
    docker:
      - image: circleci/node:10
    steps:
      - checkout
      - checkout-submodules
      - npm-install
      - add-jest-reporter-dir
      - run:
          name: Set Environment Variables
          command: |
            echo 'export CHECK_CORRECTNESS=<<parameters.check-correctness>>' >> $BASH_ENV
            echo 'export CHECK_TESTS=<<parameters.check-tests>>' >> $BASH_ENV
            echo 'export TEST_RN_PLATFORM=<<parameters.platform>>' >> $BASH_ENV
      - run:
          name: Run Checks
          command: bin/ci-checks-js.sh
          environment:
            JEST_JUNIT_OUTPUT: "reports/test-results/android-test-results.xml"
      - store_test_results:
          path: ./reports/test-results
  android-device-checks:
    parameters:
      post-to-slack:
        description: Post to Slack when tests fail. SLACK_WEBHOOK ENV variable must be set.
        type: boolean
        default: false
      is-canary:
        type: string
        default: ""
    docker:
    - image: circleci/android:api-29-node
    environment:
      JAVA_OPTS: '-Xms512m -Xmx2g'
      GRADLE_OPTS: '-Xmx3g -Dorg.gradle.daemon=false -Dorg.gradle.jvmargs="-Xmx2g -XX:+HeapDumpOnOutOfMemoryError"'
    steps:
      - checkout
      - checkout-submodules
      - npm-install
      - add-jest-reporter-dir
      - run:
          name: Set Environment Variables
          command: |
            echo 'export TEST_RN_PLATFORM=android' >> $BASH_ENV
            echo 'export TEST_ENV=sauce' >> $BASH_ENV
      - run:
          name: Bundle Android and Generate debug .apk file for testing
          command: npm run test:e2e:bundle:android && npm run test:e2e:build-app:android
      - run:
          name: Upload apk to sauce labs
          command: |
            source bin/sauce-pre-upload.sh
            curl -u "$SAUCE_USERNAME:$SAUCE_ACCESS_KEY" -X POST -H "Content-Type: application/octet-stream" https://saucelabs.com/rest/v1/storage/automattic/Gutenberg-$SAUCE_FILENAME.apk?overwrite=true --data-binary @./gutenberg/packages/react-native-editor/android/app/build/outputs/apk/debug/app-debug.apk
      - run:
          name: Run Device Tests
          command: npm run device-tests<<parameters.is-canary>>
          no_output_timeout: 1200
          environment:
            JEST_JUNIT_OUTPUT: "reports/test-results/android-test-results.xml"
      - store_test_results:
          path: ./reports/test-results
      - when:
          condition: << parameters.post-to-slack >>
          steps:
            - slack/status:
                fail_only: true
                include_job_number_field: false
                include_project_field: false
                failure_message: ':red_circle: Scheduled tests failed on Android device!'
  android-native-unit-tests:
    parameters:
      post-to-slack:
        description: Post to Slack when tests fail. SLACK_WEBHOOK ENV variable must be set.
        type: boolean
        default: false
    docker:
    - image: circleci/android:api-29-node
    steps:
      - checkout
      - checkout-submodules
      - npm-install
      - run:
          name: Run Android native unit tests
          command: cd gutenberg/packages/react-native-editor/android && ./gradlew testDebug
  ios-device-checks:
    parameters:
      post-to-slack:
        description: Post to Slack when tests fail. SLACK_WEBHOOK ENV variable must be set.
        type: boolean
        default: false
      is-canary:
        type: string
        default: ""
    macos:
      xcode: "11.2.1"
    steps:
    - checkout
    - checkout-submodules
    - npm-install
    - add-jest-reporter-dir
    - run:
        name: Set Environment Variables
        command: |
          echo 'export TEST_RN_PLATFORM=ios' >> $BASH_ENV
          echo 'export TEST_ENV=sauce' >> $BASH_ENV
    - run:
        name: Prepare build cache key
        command: find gutenberg/package-lock.json gutenberg/packages/react-native-editor/ios gutenberg/packages/react-native-aztec/ios gutenberg/packages/react-native-bridge/ios -type f -print0 | sort -z | xargs -0 shasum | tee ios-checksums.txt
    - restore_cache:
        name: Restore Build Cache
        keys:
          - ios-build-cache-{{ checksum "ios-checksums.txt" }}
    - restore_cache:
        name: Restore Dependencies Cache
        keys:
        - dependencies-v4-{{ checksum "gutenberg/packages/react-native-editor/ios/Gemfile.lock" }}-{{ checksum "gutenberg/packages/react-native-editor/ios/Podfile.lock" }}-{{ checksum "gutenberg/package-lock.json" }}
        - dependencies-v4-{{ checksum "gutenberg/packages/react-native-editor/ios/Gemfile.lock" }}-{{ checksum "gutenberg/packages/react-native-editor/ios/Podfile.lock" }}
        - dependencies-v4-{{ checksum "gutenberg/packages/react-native-editor/ios/Gemfile.lock" }}
        - dependencies-v4-
    - run:
        name: Build (if needed)
        command: test -e ios/build/gutenberg/Build/Products/Release-iphonesimulator/GutenbergDemo.app || SKIP_BUNDLING=true npm run core test:e2e:build-app:ios
    - save_cache:
        name: Save Dependencies Cache
        key: dependencies-v4-{{ checksum "gutenberg/packages/react-native-editor/ios/Gemfile.lock" }}-{{ checksum "gutenberg/packages/react-native-editor/ios/Podfile.lock" }}-{{ checksum "gutenberg/package-lock.json" }}
        paths:
        - gutenberg/packages/react-native-editor/ios/Pods
        - ~/Library/Caches/CocoaPods
        - ~/.cocoapods/repos/trunk
        - gutenberg/packages/react-native-editor/ios/vendor
    - run:
        name: Bundle iOS
        command: npm run test:e2e:bundle:ios
    - run:
        name: Generate .app file for testing
        command: WORK_DIR=$(pwd) && cd ./gutenberg/packages/react-native-editor/ios/build/gutenberg/Build/Products/Release-iphonesimulator && zip -r $WORK_DIR/gutenberg/packages/react-native-editor/ios/GutenbergDemo.app.zip GutenbergDemo.app
    - run:
        name: Upload .app to sauce labs
        command: |
          source bin/sauce-pre-upload.sh
          curl -u "$SAUCE_USERNAME:$SAUCE_ACCESS_KEY" -X POST -H "Content-Type: application/octet-stream" https://saucelabs.com/rest/v1/storage/automattic/Gutenberg-$SAUCE_FILENAME.app.zip?overwrite=true --data-binary @./gutenberg/packages/react-native-editor/ios/GutenbergDemo.app.zip
    - run:
        name: Run Device Tests
        command: |
          npm run device-tests<<parameters.is-canary>>
        no_output_timeout: 1200
        environment:
          JEST_JUNIT_OUTPUT: "reports/test-results/ios-test-results.xml"
    - store_test_results:
        path: ./reports/test-results
    - run:
        name: Prepare build cache
        command: rm gutenberg/packages/react-native-editor/ios/build/gutenberg/Build/Products/Release-iphonesimulator/GutenbergDemo.app/main.jsbundle
    - save_cache:
        name: Save Build Cache
        key: ios-build-cache-{{ checksum "ios-checksums.txt" }}
        paths:
          - gutenberg/packages/react-native-editor/ios/build/gutenberg/Build/Products/Release-iphonesimulator/GutenbergDemo.app
    - when:
          condition: << parameters.post-to-slack >>
          steps:
            - slack/status:
                fail_only: true
                include_job_number_field: false
                include_project_field: false
                failure_message: ':red_circle: Scheduled tests failed on iOS device!'

workflows:
  gutenberg-mobile:
    jobs:
      - checks:
          name: Check Correctness
          check-correctness: true
      - checks:
          name: Test iOS
          platform: ios
          check-tests: true
      - checks:
          name: Test Android
          platform: android
          check-tests: true
      - ios-device-checks:
          name: Test iOS on Device - Canaries
          is-canary: "-canary"
      - android-device-checks:
          name: Test Android on Device - Canaries
          is-canary: "-canary"
      - Optional UI Tests:
          type: approval
          filters:
            branches:
              ignore:
                - develop
      - ios-device-checks:
          name: Test iOS on Device - Full
          requires: [ "Optional UI Tests" ]
      - android-device-checks:
          name: Test Android on Device - Full
          requires: [ "Optional UI Tests" ]
      - android-native-unit-tests:
          name: Android Native Unit Tests

  ui-tests-full-scheduled:
    jobs:
      - ios-device-checks:
          name: Test iOS on Device - Scheduled
          post-to-slack: true
      - android-device-checks:
          name: Test Android on Device - Scheduled
          post-to-slack: true
    triggers:
      - schedule:
          cron: '1 1,13 * * *'
          filters:
            branches:
              only: develop
